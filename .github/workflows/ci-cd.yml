name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  AWS_REGION: me-south-1
  S3_BUCKET: portfolio-website-mjaber
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_success: ${{ steps.build.outputs.success }}
      build_version: ${{ steps.version.outputs.version }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install
        npm ci

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: |
        export CHROME_BIN=/usr/bin/google-chrome
        export DISPLAY=:99
        /usr/bin/Xvfb :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
        sleep 3
        npm test -- --browsers ChromeHeadless --watch=false

    - name: Build
      id: build
      run: |
        npm run build -- --configuration=production
        echo "success=true" >> $GITHUB_OUTPUT

    - name: Get version
      id: version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/mohamad-jaber-portfolio/
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.build_success == 'true'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/mohamad-jaber-portfolio/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to S3
      run: |
        # Upload all files except index.html with cache control
        aws s3 sync dist/mohamad-jaber-portfolio/ s3://${{ env.S3_BUCKET }} \
          --exclude "index.html" \
          --cache-control "public, max-age=31536000" \
          --delete

        # Upload index.html with no cache
        aws s3 cp dist/mohamad-jaber-portfolio/index.html s3://${{ env.S3_BUCKET }}/index.html \
          --cache-control "no-cache, no-store, must-revalidate" \
          --content-type "text/html; charset=utf-8"

    - name: Invalidate CloudFront Distribution
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
